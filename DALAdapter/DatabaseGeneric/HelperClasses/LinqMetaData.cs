//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.4.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Linq;
using System.Collections.Generic;
using SD.LLBLGen.Pro.LinqSupportClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SD.HnD.DAL.EntityClasses;
using SD.HnD.DAL.FactoryClasses;

namespace SD.HnD.DAL.Linq
{
	/// <summary>Meta-data class for the construction of Linq queries which are to be executed using LLBLGen Pro code.</summary>
	public partial class LinqMetaData: ILinqMetaData
	{
		/// <summary>CTor. Using this ctor will leave the IDataAccessAdapter object to use empty. To be able to execute the query, an IDataAccessAdapter instance
		/// is required, and has to be set on the LLBLGenProProvider2 object in the query to execute. </summary>
		public LinqMetaData() : this(null, null) { }
		
		/// <summary>CTor which accepts an IDataAccessAdapter implementing object, which will be used to execute queries created with this metadata class.</summary>
		/// <param name="adapterToUse">the IDataAccessAdapter to use in queries created with this meta data</param>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data till they go out of scope.</remarks>
		public LinqMetaData(IDataAccessAdapter adapterToUse) : this (adapterToUse, null) { }

		/// <summary>CTor which accepts an IDataAccessAdapter implementing object, which will be used to execute queries created with this metadata class.</summary>
		/// <param name="adapterToUse">the IDataAccessAdapter to use in queries created with this meta data</param>
		/// <param name="customFunctionMappings">The custom function mappings to use. These take higher precedence than the ones in the DQE to use.</param>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data till they go out of scope.</remarks>
		public LinqMetaData(IDataAccessAdapter adapterToUse, FunctionMappingStore customFunctionMappings)
		{
			this.AdapterToUse = adapterToUse;
			this.CustomFunctionMappings = customFunctionMappings;
		}
	
		/// <summary>returns the datasource to use in a Linq query for the entity type specified</summary>
		/// <param name="typeOfEntity">the type of the entity to get the datasource for</param>
		/// <returns>the requested datasource</returns>
		public IDataSource GetQueryableForEntity(int typeOfEntity)
		{
			switch((SD.HnD.DAL.EntityType)typeOfEntity)
			{
				case SD.HnD.DAL.EntityType.ActionRightEntity:
					return this.ActionRight;
				case SD.HnD.DAL.EntityType.AttachmentEntity:
					return this.Attachment;
				case SD.HnD.DAL.EntityType.AuditActionEntity:
					return this.AuditAction;
				case SD.HnD.DAL.EntityType.AuditDataCoreEntity:
					return this.AuditDataCore;
				case SD.HnD.DAL.EntityType.AuditDataMessageRelatedEntity:
					return this.AuditDataMessageRelated;
				case SD.HnD.DAL.EntityType.AuditDataThreadRelatedEntity:
					return this.AuditDataThreadRelated;
				case SD.HnD.DAL.EntityType.BookmarkEntity:
					return this.Bookmark;
				case SD.HnD.DAL.EntityType.ForumEntity:
					return this.Forum;
				case SD.HnD.DAL.EntityType.ForumRoleForumActionRightEntity:
					return this.ForumRoleForumActionRight;
				case SD.HnD.DAL.EntityType.IPBanEntity:
					return this.IPBan;
				case SD.HnD.DAL.EntityType.MessageEntity:
					return this.Message;
				case SD.HnD.DAL.EntityType.RoleEntity:
					return this.Role;
				case SD.HnD.DAL.EntityType.RoleAuditActionEntity:
					return this.RoleAuditAction;
				case SD.HnD.DAL.EntityType.RoleSystemActionRightEntity:
					return this.RoleSystemActionRight;
				case SD.HnD.DAL.EntityType.RoleUserEntity:
					return this.RoleUser;
				case SD.HnD.DAL.EntityType.SectionEntity:
					return this.Section;
				case SD.HnD.DAL.EntityType.SupportQueueEntity:
					return this.SupportQueue;
				case SD.HnD.DAL.EntityType.SupportQueueThreadEntity:
					return this.SupportQueueThread;
				case SD.HnD.DAL.EntityType.SystemDataEntity:
					return this.SystemData;
				case SD.HnD.DAL.EntityType.ThreadEntity:
					return this.Thread;
				case SD.HnD.DAL.EntityType.ThreadSubscriptionEntity:
					return this.ThreadSubscription;
				case SD.HnD.DAL.EntityType.UserEntity:
					return this.User;
				case SD.HnD.DAL.EntityType.UserTitleEntity:
					return this.UserTitle;
				default:
					return null;
			}
		}

		/// <summary>returns the datasource to use in a Linq query for the entity type specified</summary>
		/// <typeparam name="TEntity">the type of the entity to get the datasource for</typeparam>
		/// <returns>the requested datasource</returns>
		public DataSource2<TEntity> GetQueryableForEntity<TEntity>()
				where TEntity : class
		{
			return new DataSource2<TEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse);
		}

		/// <summary>returns the datasource to use in a Linq query when targeting ActionRightEntity instances in the database.</summary>
		public DataSource2<ActionRightEntity> ActionRight {	get { return new DataSource2<ActionRightEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting AttachmentEntity instances in the database.</summary>
		public DataSource2<AttachmentEntity> Attachment {	get { return new DataSource2<AttachmentEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting AuditActionEntity instances in the database.</summary>
		public DataSource2<AuditActionEntity> AuditAction {	get { return new DataSource2<AuditActionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting AuditDataCoreEntity instances in the database.</summary>
		public DataSource2<AuditDataCoreEntity> AuditDataCore {	get { return new DataSource2<AuditDataCoreEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting AuditDataMessageRelatedEntity instances in the database.</summary>
		public DataSource2<AuditDataMessageRelatedEntity> AuditDataMessageRelated {	get { return new DataSource2<AuditDataMessageRelatedEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting AuditDataThreadRelatedEntity instances in the database.</summary>
		public DataSource2<AuditDataThreadRelatedEntity> AuditDataThreadRelated {	get { return new DataSource2<AuditDataThreadRelatedEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting BookmarkEntity instances in the database.</summary>
		public DataSource2<BookmarkEntity> Bookmark {	get { return new DataSource2<BookmarkEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting ForumEntity instances in the database.</summary>
		public DataSource2<ForumEntity> Forum {	get { return new DataSource2<ForumEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting ForumRoleForumActionRightEntity instances in the database.</summary>
		public DataSource2<ForumRoleForumActionRightEntity> ForumRoleForumActionRight {	get { return new DataSource2<ForumRoleForumActionRightEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting IPBanEntity instances in the database.</summary>
		public DataSource2<IPBanEntity> IPBan {	get { return new DataSource2<IPBanEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting MessageEntity instances in the database.</summary>
		public DataSource2<MessageEntity> Message {	get { return new DataSource2<MessageEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting RoleEntity instances in the database.</summary>
		public DataSource2<RoleEntity> Role {	get { return new DataSource2<RoleEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting RoleAuditActionEntity instances in the database.</summary>
		public DataSource2<RoleAuditActionEntity> RoleAuditAction {	get { return new DataSource2<RoleAuditActionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting RoleSystemActionRightEntity instances in the database.</summary>
		public DataSource2<RoleSystemActionRightEntity> RoleSystemActionRight {	get { return new DataSource2<RoleSystemActionRightEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting RoleUserEntity instances in the database.</summary>
		public DataSource2<RoleUserEntity> RoleUser {	get { return new DataSource2<RoleUserEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SectionEntity instances in the database.</summary>
		public DataSource2<SectionEntity> Section {	get { return new DataSource2<SectionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SupportQueueEntity instances in the database.</summary>
		public DataSource2<SupportQueueEntity> SupportQueue {	get { return new DataSource2<SupportQueueEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SupportQueueThreadEntity instances in the database.</summary>
		public DataSource2<SupportQueueThreadEntity> SupportQueueThread {	get { return new DataSource2<SupportQueueThreadEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting SystemDataEntity instances in the database.</summary>
		public DataSource2<SystemDataEntity> SystemData {	get { return new DataSource2<SystemDataEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting ThreadEntity instances in the database.</summary>
		public DataSource2<ThreadEntity> Thread {	get { return new DataSource2<ThreadEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting ThreadSubscriptionEntity instances in the database.</summary>
		public DataSource2<ThreadSubscriptionEntity> ThreadSubscription {	get { return new DataSource2<ThreadSubscriptionEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting UserEntity instances in the database.</summary>
		public DataSource2<UserEntity> User {	get { return new DataSource2<UserEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		
		/// <summary>returns the datasource to use in a Linq query when targeting UserTitleEntity instances in the database.</summary>
		public DataSource2<UserTitleEntity> UserTitle {	get { return new DataSource2<UserTitleEntity>(this.AdapterToUse, new ElementCreator(), this.CustomFunctionMappings, this.ContextToUse); } }
		


		/// <summary> Gets / sets the IDataAccessAdapter to use for the queries created with this meta data object.</summary>
		/// <remarks> Be aware that the IDataAccessAdapter object set via this property is kept alive by the LLBLGenProQuery objects created with this meta data
		/// till they go out of scope.</remarks>
		public IDataAccessAdapter AdapterToUse { get; set; }
		
		/// <summary>Gets or sets the custom function mappings to use. These take higher precedence than the ones in the DQE to use</summary>
		public FunctionMappingStore CustomFunctionMappings { get; set; }
		
		/// <summary>Gets or sets the Context instance to use for entity fetches.</summary>
		public Context ContextToUse { get; set; }
	}
}